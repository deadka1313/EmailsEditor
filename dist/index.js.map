{"version":3,"file":"index.js","sources":["../src/constants.ts","../src/helpers.ts","../src/FormDom.ts","../src/index.ts"],"sourcesContent":["export const checkregularEmail = /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i;\r\n","import { checkregularEmail } from './constants';\r\nimport { IEmailIsValid } from './core/IEmailIsValid';\r\n\r\nexport const checkValidEmail = (email: string): boolean => {\r\n    const pattern = new RegExp(checkregularEmail);\r\n    return pattern.test(email);\r\n};\r\n\r\nexport const checkEnterLetter = (word: string): boolean => {\r\n    return /[\\s,]/g.test(word);\r\n};\r\n\r\nexport const checkValidationEmails = (emails: IEmailIsValid[]): IEmailIsValid[] => {\r\n    return emails.filter(item => item.isValid);\r\n};\r\n\r\nexport const checkForRepeatedEmails = (email: string, emails: IEmailIsValid[]): boolean => {\r\n    for (let i = 0; i < emails.length; i++) {\r\n        if (emails[i].name === email) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const notEmpty = <T>(item: T): T => {\r\n    if (item) {\r\n        return item;\r\n    } else {\r\n        throw new Error(`Empty property`);\r\n    }\r\n};\r\n","import { notEmpty } from './helpers';\r\nimport { IEmailIsValid } from './core/IEmailIsValid';\r\n\r\nexport default class FormDom {\r\n    private readonly element: HTMLElement;\r\n    private readonly placeholderElement: HTMLElement;\r\n    private readonly wrapperForm: HTMLElement;\r\n\r\n    private readonly hideElementWidthForInput: HTMLElement;\r\n\r\n    private setFocusInput = (e: Event | null): void => {\r\n        if (\r\n            e &&\r\n            this.inputElement &&\r\n            (e.target as HTMLTextAreaElement).className.indexOf('emails-editor_input') === -1 &&\r\n            (e.target as HTMLTextAreaElement).className.indexOf('emails-editor_closebtn') === -1 &&\r\n            (e.target as HTMLTextAreaElement).className.indexOf('emails-editor_email') === -1\r\n        ) {\r\n            this.inputElement.focus();\r\n        }\r\n    };\r\n\r\n    private onInput = (e: Event): void => {\r\n        const value = (e.target as HTMLTextAreaElement)?.value;\r\n        this.inputElement.style.width = 2 + this.getTextWidth(value) + 'px';\r\n        if (value) {\r\n            this.placeholderElement.style.display = 'none';\r\n        } else if (this.placeholderElement.style.display === 'none') {\r\n            this.placeholderElement.style.display = 'inline-block';\r\n        }\r\n    };\r\n\r\n    private getTextWidth = (value = ''): number => {\r\n        this.hideElementWidthForInput.innerHTML = value;\r\n        return this.hideElementWidthForInput.offsetWidth;\r\n    };\r\n\r\n    constructor(elem: HTMLElement) {\r\n        this.element = elem;\r\n\r\n        this.element.innerHTML =\r\n            '<div class=\"emails-editor_form\">' +\r\n            '<span class=\"email-editor_wrapper-emails\">' +\r\n            '</span>' +\r\n            '<input class=\"emails-editor_input\" />' +\r\n            '<span class=\"emails-editor_fake-span\">' +\r\n            '</span>' +\r\n            '<span class=\"emails-editor_placeholder\">add more peopleâ€¦</span>' +\r\n            '</div>';\r\n\r\n        this.placeholderElement = notEmpty(this.element.querySelector('.emails-editor_placeholder') as HTMLElement);\r\n        this.wrapperForm = notEmpty(this.element.querySelector('.emails-editor_form') as HTMLElement);\r\n        this.inputElement = notEmpty(this.element.querySelector('.emails-editor_input') as HTMLTextAreaElement);\r\n        this.wrapperEmails = notEmpty(this.element.querySelector('.email-editor_wrapper-emails') as HTMLElement);\r\n        this.hideElementWidthForInput = notEmpty(this.element.querySelector('.emails-editor_fake-span') as HTMLElement);\r\n\r\n        this.wrapperForm.addEventListener('click', e => this.setFocusInput(e));\r\n        this.inputElement.addEventListener('input', e => this.onInput(e));\r\n    }\r\n\r\n    readonly inputElement: HTMLTextAreaElement;\r\n    readonly wrapperEmails: HTMLElement;\r\n\r\n    addEmailDOM = (email: IEmailIsValid): void => {\r\n        if (this.wrapperForm) {\r\n            this.wrapperForm.scrollTop = this.wrapperForm.scrollHeight;\r\n        }\r\n        const newElement = document.createElement('span');\r\n        newElement.innerHTML = email.name;\r\n        newElement.className = `emails-editor_email emails-editor_email__${email.isValid ? 'valid' : 'invalid'}`;\r\n        newElement.dataset.emailName = email.name;\r\n\r\n        const newDeleteItemElement = document.createElement('span');\r\n        newDeleteItemElement.innerHTML = '&times;';\r\n        newDeleteItemElement.className = 'emails-editor_closebtn';\r\n        newElement.appendChild(newDeleteItemElement);\r\n\r\n        this.wrapperEmails.appendChild(newElement);\r\n    };\r\n\r\n    removeEmailDOM = (name: string): void => {\r\n        const item = this.wrapperEmails.querySelector(`[data-email-name=\"${name}\"]`);\r\n        item?.parentNode?.removeChild(item);\r\n    };\r\n\r\n    resetInput = (): void => {\r\n        this.inputElement.value = '';\r\n        this.inputElement.style.width = 2 + this.getTextWidth() + 'px';\r\n        this.placeholderElement.style.display = 'inline-block';\r\n    };\r\n}\r\n","import './index.sass';\r\nimport { ICreateEmailForm } from './core/ICreateEmailForm';\r\nimport { IEmailIsValid } from './core/IEmailIsValid';\r\nimport { checkEnterLetter, checkForRepeatedEmails, checkValidationEmails, checkValidEmail } from './helpers';\r\nimport FormDom from './FormDom';\r\n\r\nexport default class CreateEmailForm implements ICreateEmailForm {\r\n    private formDom: FormDom;\r\n\r\n    private emails: IEmailIsValid[] = [];\r\n\r\n    private onChange = (e: Event | null): void => {\r\n        if (e) {\r\n            const value = (e.target as HTMLTextAreaElement).value;\r\n            if (value.length === 1 && checkEnterLetter(value)) {\r\n                this.formDom.resetInput();\r\n            }\r\n            if (value && value.length > 1 && checkEnterLetter(value)) {\r\n                this.addEmail(value);\r\n            }\r\n        }\r\n    };\r\n\r\n    private onBlur = (e: Event | null): void => {\r\n        if (e) {\r\n            const email = (e.target as HTMLTextAreaElement).value.replace(/(^\\s*)|(\\s*)$/g, '');\r\n            if (email) {\r\n                this.addEmail(email);\r\n            }\r\n        }\r\n    };\r\n\r\n    private enterValuesToStore = (): void => {\r\n        if (this.formDom.inputElement) {\r\n            const value = this.formDom.inputElement.value;\r\n            console.log(value);\r\n            this.addEmail(value);\r\n            this.formDom.resetInput();\r\n        }\r\n    };\r\n\r\n    private addEmail = (email: string): void => {\r\n        let inputEmails: string = email.replace(/(^\\s*)|(\\s*)$/g, '');\r\n        inputEmails = inputEmails.replace(/(,\\s*)$/g, ',');\r\n        const inputEmailsSplit: string[] = inputEmails.split(/\\s|,/).filter(item => item);\r\n        const newEmails: IEmailIsValid[] = inputEmailsSplit.map(item => {\r\n            return {\r\n                name: item,\r\n                isValid: checkValidEmail(item),\r\n            };\r\n        });\r\n        newEmails.map(item => {\r\n            if (!checkForRepeatedEmails(item.name, this.emails)) {\r\n                this.emails.push(item);\r\n                this.formDom.addEmailDOM(item);\r\n                const itemDOM = this.formDom.wrapperEmails.querySelector(`[data-email-name=\"${item.name}\"]`);\r\n                itemDOM?.addEventListener('click', e => this.removeEmail(e));\r\n            }\r\n        });\r\n\r\n        this.formDom.resetInput();\r\n    };\r\n\r\n    private removeEmail = (e: Event | null): void => {\r\n        if (e) {\r\n            const email = ((e.target as HTMLTextAreaElement).parentElement as HTMLElement).dataset.emailName as string;\r\n            this.emails = this.emails.filter(item => item.name !== email);\r\n            this.formDom.removeEmailDOM(email);\r\n        }\r\n    };\r\n\r\n    constructor(element: HTMLElement) {\r\n        this.formDom = new FormDom(element);\r\n\r\n        if (this.formDom.inputElement) {\r\n            // fix IE 11\r\n            const inputEventType = /Trident/.test(navigator.userAgent) ? 'textinput' : 'input';\r\n\r\n            this.formDom.inputElement.addEventListener(inputEventType, e => this.onChange(e));\r\n            this.formDom.inputElement.addEventListener('blur', e => this.onBlur(e));\r\n            this.formDom.inputElement.addEventListener('paste', () => {\r\n                this.enterValuesToStore();\r\n            });\r\n            this.formDom.inputElement.addEventListener('keydown', e => {\r\n                if ((e as KeyboardEvent).key === 'Enter') {\r\n                    this.enterValuesToStore();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public setEmail(email: string): void {\r\n        this.addEmail(email);\r\n    }\r\n\r\n    public getEmails(): string[] {\r\n        return checkValidationEmails(this.emails).map(item => {\r\n            return item.name;\r\n        });\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}